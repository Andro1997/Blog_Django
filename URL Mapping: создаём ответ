Созданием ответа на запрос пользователя занимаются функции Django Views (views, «отображения»). 
Одна отдельная функция называется view-функция.
В качестве аргумента view-функция принимает HTTP-запрос (объект HttpRequest, его создаёт Django), 
а возвращает HTTP-ответ (объект HttpResponse), 
который формируется по указанному разработчиком алгоритму.

HttpResponse содержит:
Kонтент ответа: простой текст, код HTML, данные в JSON, файл, изображение — практически любые данные, по выбору разработчика
Tехническую информацию, сопровождающую ответ: например, код ответа сервера, кодировку ответа, тип контента 
(скажем, передаётся текстовая строка или файл в Excel).

View-функции принято хранить в файле views.py. Такой файл создаётся для каждого приложения. 
В вашем блоге будет три файла views.py: 
один для приложения Articles App, другой — для Accounts App. 
Ещё один обрабатывает запросы к главной странице проекта

Для приложений в проекте создаются отдельные директории /articles и /accounts. На одном уровне с ними — директория my_praktikum_blog. Это головная директория проекта «по умолчанию»: 
именно в ней находится корневой файл urls.py сервера, здесь же лежат views для главной страницы и файлы настройки проекта.

Как устроена обработка запросов
Чтобы функция path() могла вызвать view-функции из файлов views.py, импортируем эти файлы.

Так, в urls.py нашего блога будут импортированы три файла views.py: из головной директории и из папок приложений:

# код файла urls.py в директории /my_praktikum_blog

from django.urls import path 
# переназовём файлы views.py, чтобы избежать конфликта имён.
# импортируем views.py из папки приложения Articles App:
from articles import views as art_views # ...и будем звать его art_views

# импортируем views.py из папки приложения Accounts App:
from accounts import views as acc_views # ...и будем звать его acc_views 

# импортируем views.py из директории по умолчанию:
from . import views # ...а давать ей специальное имя не будем, оставим views

urlpatterns = [ 
    path('', views.index), 
    path('dashboard', art_views.dashboard), 
    path('sign_up', acc_views.sign_up), 
    path('sign_in', acc_views.sign_in), 
    path('my_account', acc_views.my_account), 
]


Теперь мы готовы ответить на запрос пользователя. 
Знакомиться с блогом он начнёт с главной страницы и запросит адрес http://my-blog.praktikum.yandex.ru/. 
В urls.py сработает шаблон "" и будет вызвана функция index()

# код файла views.py из директории /my_praktikum_blog

# из библиотеки django.http импортируем тип HttpResponse:
from django.http import HttpResponse

# здесь объявлена функция index, которая отдаёт главную страницу
def index(request):
    # создаём объект типа HttpResponse
    resp = HttpResponse('<h1>Главная страница проекта My Praktikum Blog</h1>')
    # и возвращаем его
    return resp
    
    В результате работы urls.py и view-функции index() пользователь увидел в браузере текст, написанный Очень Крупными Буквами: 
    Главная страница проекта My Praktikum Blog
