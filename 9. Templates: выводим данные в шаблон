Передать данные в шаблон — это половина дела. Шаблон должен уметь принять эти данные и расставить их по местам.
Данные выводятся в шаблон так: в HTML-коде шаблона указывают ключ элемента словаря context, 
и вместо этого ключа будет выведено соответствующее ему значение. Обратите внимание на синтаксис: 
ключ пишется в двойных фигурных скобках.
Например, передадим в словаре context такую информацию:

{
    'fullname' : 'Роби Тобинсон',  # имя
    'gender' : 'мальчик',  # пол
    'age' : '59'  # возраст
}

В директории templates создадим шаблон index.html и подставим в него данные из context:
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Django приветствует тебя, {{ fullname }}</title>
</head>
<body>
    <h1>Привет, {{ fullname }}!</h1>
    <p>Django тебя узнал.</p>
    <p>Ты {{ gender }} и тебе {{ age }}, всё верно?</p>
</body>
</html>

В этом примере вместо {{ fullname }} Django подставит значение из словаря context по ключу 'fullname': «Роби Тобинсон».
То же и с остальными ключами.
Теперь, когда мы знаем о Templates, алгоритм обработки запроса приобретает [sarcasm mode on] простой и логичный вид [sarcasm mode off]:
Пользователь отправляет на сервер запрос.
Запрос передаётся в URL Mapping и сверяется с шаблонами в urls.py.
При совпадении с шаблоном вызывается view-функция.

View-функция обрабатывает запрос и вызывает функцию render(), передавая в неё:
– объект HttpRequest с данными запроса,
– название шаблона,
– словарь context с данными для вывода в шаблон.

Функция render() генерирует и возвращает во view-функцию код страницы.
View-функция возвращает сгенерированную страницу ответом (HttpResponse) на запрос пользователя.
Запрошенная страница загружается в браузер пользователя, которому и в голову не приходит, какой длинный путь прошёл его запрос.
Сейчас вам не нужно создавать свои шаблоны страниц: вы разрабатываете backend проекта, 
а писать HTML-шаблоны будут специалисты по frontend.
Ваша работа — правильно собрать данные во view-функции, передать эти данные в функцию render() и выбрать нужный HTML-шаблон.
